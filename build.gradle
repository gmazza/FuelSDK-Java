buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
    }
}

plugins {
    id "pl.allegro.tech.build.axion-release" version "1.14.3"
    id "io.mateo.cxf-codegen" version "1.0.3"
    // JavaCC compiler for script in main/javacc folder
    // https://cs.lmu.edu/~ray/notes/javacc/
    // https://github.com/javacc/javaccPlugin
    id "ca.coglinc.javacc" version "2.4.0"
    id 'com.jfrog.artifactory' version '4.31.0'
    id 'java'
    id 'maven-publish'
}

scmVersion {
    useHighestVersion = true
}

group 'org.gmazza'
version scmVersion.version
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDir compileJavacc.outputDirectory
        }
        resources {
            srcDirs = ["src/main/java","src/main/resources"]
            excludes = ["**/*.java", "fuelsdk.properties.template", "fuelsdk.properties", "log4j.properties"]
        }
    }
}

dependencies {
    implementation "commons-beanutils:commons-beanutils:1.9.4"
    implementation "org.apache.cxf:cxf-rt-frontend-jaxws:$cxfVersion"
    implementation "org.apache.cxf:cxf-rt-transports-http:$cxfVersion"
    implementation "org.apache.cxf:cxf-rt-ws-security:$cxfVersion"
    implementation "org.apache.cxf.xjc-utils:cxf-xjc-runtime:3.3.2"
    implementation "com.google.code.gson:gson:2.10"
    implementation "org.apache.commons:commons-lang3:3.12.0"
    implementation "org.apache.logging.log4j:log4j-core:$log4jVersion"
    implementation "org.apache.logging.log4j:log4j-1.2-api:$log4jVersion"

    // Below deps in JDK 8 but not more recent
    implementation "javax.xml.ws:jaxws-api:2.3.1"
    implementation "javax.jws:javax.jws-api:1.1"
    implementation "com.sun.xml.messaging.saaj:saaj-impl:1.5.3"

    testImplementation "junit:junit:4.13.2"
    testImplementation "org.hamcrest:hamcrest-core:2.2"

    // during CXF WSDL2Java generation
    // https://ciscoo.github.io/cxf-codegen-gradle/docs/snapshot/user-guide/#logging
    cxfCodegen "ch.qos.logback:logback-classic:1.4.5"
    cxfCodegen "jakarta.xml.ws:jakarta.xml.ws-api:2.3.3"
    cxfCodegen "jakarta.annotation:jakarta.annotation-api:1.3.5"
    // used to generate toString() via -xjc-Xts setting below on created objects
    cxfCodegen "org.apache.cxf.xjcplugins:cxf-xjc-ts:3.3.2"
}

// Generate Java client stubs and JAXB request/response objects from WSDL.
// https://github.com/ciscoo/cxf-codegen-gradle (see User Guide link in README)
tasks.register("runWsdlToJava", io.mateo.cxf.codegen.wsdl2java.Wsdl2Java) {
    toolOptions {
        wsdl.set(file("src/main/resources/etframework20220219.wsdl"))
        // below needed for defining the wsdlLocation in PartnerAPI.java
        // otherwise nonportable reference to developer laptop would be used
        wsdlLocation.set("etframework20220219.wsdl")
        bindingFiles.set([("src/main/resources/etframework-bindings.xml")])
        extraArgs.set(["-client", "-p", "com.exacttarget.fuelsdk.internal",
                       "-fe", "jaxws21",
                       "-xjc-enableIntrospection", "-xjc-Xts"])
        outputDir.set(file("$buildDir/generated-sources/cxf"))
    }
}

task sourcesJar(type: Jar) {
    dependsOn(project.tasks.runWsdlToJava)
    dependsOn(compileJavacc)
    from sourceSets.main.java.srcDirs
    archiveClassifier = 'sources'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
}

artifacts {
    archives jar
    archives sourcesJar
}

compileJava.dependsOn(project.tasks.runWsdlToJava)
compileJava.dependsOn(compileJavacc)

jar.enabled = true
